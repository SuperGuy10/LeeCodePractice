1. array * int = every item in the array * int

2. using list1[] + list2[] = list3[] gives you all items in one list instead of a list in a list like list.append()function did. 
3. Using list slicing to easily transfer 1D list to 2D list.

4. for i in a range(), can not directly in a int.

5. numpy.reshape(list,(row, column))
6. the first parameter is the array you want to reshap, the second is the new numbers of rows and colums that you want

7. array.tolist()
8. change array to a list

9. For a list "del" is faster than "remove".
10.The cleanest way to remove elements in list is list.remove(item), quite close to list.pop(item_index) 

11.**List comprehensions provide a concise way to create lists. Common applications are to make new lists where each element is the result of some operations applied to each member of another sequence or iterable, or to create a subsequence of those elements that satisfy a certain condition.**
details see:
https://stackoverflow.com/questions/34835951/what-does-list-comprehension-mean-how-does-it-work-and-how-can-i-use-it
